// Color variables
$magenta          : map_get($colors, magenta);
$orange          : map_get($colors, orange);
$yellow          : map_get($colors, yellow);
$green          : map_get($colors, green);
$blue          : map_get($colors, blue);
$darkblue          : map_get($colors, darkblue);
$black          : map_get($colors, black);
$white          : map_get($colors, white);
$lightgray      : map_get($colors, lightgray);
$gray          : map_get($colors, gray);

// Mixin to create vertically split two-color backgrounds
@mixin color-gradient-vertical-half($left, $right){
	background: $left;
	background: -moz-linear-gradient(left, $left 0%, $left 50%, $right 50%, $right 50%, $right 50%, $right 100%);
	background: -webkit-linear-gradient(left, $left 0%,$left 50%,$right 50%,$right 50%,$right 50%,$right 100%);
	background: linear-gradient(to right, $left 0%,$left 50%,$right 50%,$right 50%,$right 50%,$right 100%);
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$left', endColorstr='$right',GradientType=1 );
}

// Mixin to convert a hex and decimal to transparent background-color
@mixin background-color-transparent($color, $opacity) {
	background: $color;
	background: rgba($color, $opacity);
}

// TODO Relocate this and add the other colors and reevaluate font colors
.bg-color- {
  &magenta {
    background-color: $magenta;
    color: $white;
  }
  &orange {
    background-color: $orange;
    color: $white;
  }
  &yellow {
    background-color: $yellow;
  }
  &green {
    background-color: $green;
    color: $white;
  }
  &blue {
    background-color: $blue;
    color: $white;
  }
  &darkblue {
    background-color: $darkblue;
    color: $white;
  }
  &black {
    background-color: $black;
    color: $white;
  }
  &white {
    background-color: $white;
  }
  &lightgray {
    background-color: $lightgray;
    color: $white;
  }
  &gray {
    background-color: $gray;
    color: $white;
  }

	// Font and Link Color pairings
  &magenta, &orange, &yellow, &green, &blue, &darkblue, &black {
		color: $white;

		a:not(.button), .button-list__root a.button-quaternary {
			color: $gray;
			text-decoration: underline;

			&:hover {
				color: $gray;
				text-decoration: none;
			}
		}
	}
	&gray, &lightgray, &white {
		// Default colors should already be compatible with Gray and White
	}
}

// TODO The following for blockquote can likely be refactored better
.bq-bg-color- {
  &magenta {
    blockquote {
      background-color: $magenta;
      color: $white;
    }
  }
  &orange {
    blockquote {
      background-color: $orange;
      color: $white;
    }
  }
  &yellow {
    blockquote {
      background-color: $yellow;
    }
  }
  &green {
    blockquote {
      background-color: $green;
      color: $white;
    }
  }
  &blue {
    blockquote {
      background-color: $blue;
      color: $white;
    }
  }
  &darkblue {
    blockquote {
      background-color: $darkblue;
      color: $white;
    }
  }
  &black {
    blockquote {
      background-color: $black;
      color: $white;
    }
  }
  &white {
    blockquote {
      background-color: $white;
    }
  }
  &lightgray {
    blockquote {
      background-color: $lightgray;
      color: $white;
    }
  }
  &gray {
    blockquote {
      background-color: $gray;
      color: $white;
    }
  }
}
